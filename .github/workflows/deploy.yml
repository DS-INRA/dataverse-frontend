name: deploy

on:
  workflow_dispatch:
    inputs:
      infra_type:
        description: Remote infrastructure type
        type: choice
        required: true
        options:
          - S3
          - Payara
      environment:
        description: Environment to run the deployment against
        type: environment
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build
        if: ${{ github.event.inputs.infra_type == 'S3' }}
        run: npm run build

      - name: Build with base path
        if: ${{ github.event.inputs.infra_type == 'Payara' }}
        run: npm run build-basepath

      - uses: actions/upload-artifact@v3
        with:
          name: built-site
          path: ./dist

  deploy-to-s3:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.infra_type == 'S3' }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install awscli
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - uses: actions/download-artifact@v3
        with:
          name: built-site
          path: ./dist

      - name: Upload to S3
        run: |
          aws s3 sync ./dist s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  deploy-to-payara:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.infra_type == 'Payara' }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/download-artifact@v3
        with:
          name: built-site
          path: ./dist

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Build war file
        working-directory: ./deployment/payara
        run: mvn package "-Dversion=${{ steps.branch-name.outputs.current_branch }}"
