name: test

on: push

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Create .npmrc
        run: |
          cp .npmrc.example .npmrc
          sed -i -e 's/<YOUR_GITHUB_AUTH_TOKEN>/${{ secrets.GITHUB_TOKEN }}/g' .npmrc

      - name: Install Dependencies
        run: rm package-lock.json && npm install

      - name: Build Dataverse Design System
        working-directory: packages/design-system
        run: npm run build

      - name: Create and populate .env file
        env:
          DATAVERSE_BACKEND_URL: 'http://localhost:8000'
        run: |
          touch .env
          echo VITE_DATAVERSE_BACKEND_URL="$DATAVERSE_BACKEND_URL" >> .env
        shell: bash

      - name: Start containers
        working-directory: dev-env
        # hardcoded branch name for action test
        run: ./run-env.sh 9588-datasets-api-extension

      - name: Wait for containers to be ready
        run: timeout 300s sh -c 'until docker logs dev_dataverse_bootstrap | grep 'your instance has been configured'; do echo "Waiting for Dataverse to be bootstrapped..."; sleep 2; done'

      - name: Run e2e tests
        run: npm run test:e2e

  component:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Create .npmrc
        run: |
          cp .npmrc.example .npmrc
          sed -i -e 's/<YOUR_GITHUB_AUTH_TOKEN>/${{ secrets.GITHUB_TOKEN }}/g' .npmrc

      - name: Install Dependencies
        run: rm package-lock.json && npm install

      - name: Build Dataverse Design System
        working-directory: packages/design-system
        run: npm run build

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          component: true

      - name: Cypress run Design System
        uses: cypress-io/github-action@v4
        with:
          project: packages/design-system
          component: true

      - name: Check coverage
        run: npm run test:coverage-all

      - name: Merge coverage
        run: npm run test:coverage-merge

      - name: Upload coverage report to Coveralls
        if: always()
        uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: './merged-coverage/lcov.info'
          github-token: ${{ secrets.GITHUB_TOKEN }}

  interaction-and-accessibility:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Create .npmrc
        run: |
          cp .npmrc.example .npmrc
          sed -i -e 's/<YOUR_GITHUB_AUTH_TOKEN>/${{ secrets.GITHUB_TOKEN }}/g' .npmrc

      - name: Install Dependencies
        run: rm package-lock.json && npm install

      - name: Build Dataverse Design System
        working-directory: packages/design-system
        run: npm run build

      - name: Build Storybook Design System
        working-directory: packages/design-system
        run: npm run build-storybook --quiet

      - name: Serve Storybook Design System and run tests
        working-directory: packages/design-system
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on http://127.0.0.1:6006 --l && npx test-storybook --url http://127.0.0.1:6006"

      - name: Build Storybook
        run: npm run build-storybook --quiet

      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on http://127.0.0.1:6006 --l && npx test-storybook --url http://127.0.0.1:6006"
